[site]
; This indicates if these are settings for an actual site, or a helper
implementation                = false

; If the domain differs from standard in some way, e.g. using https this
; should be overwridden and return a constant string with the correct domain
; otherwise leave this as null. It will be automatically constructed
; from the host by adding http:// to the host.
option:source:domain          =

; This is the GET prefix common to all mods. This doesn't  refer to
; the pages that the mods are parsed from but the pages that the
; user is directed to (The actual mod location)
option:source:modUrlPrefix    =

; This should be an array of all the suffixes of the seed pages to parse
; If there are no seed pages it should return an empty array
option:source:initialPages[]  =

; Gets the pages that should be checked every now and again that lists the
; updated mods. This is guarenteed to be parsed about once every UpdateFrequency
; so doesn't have to refer to an update page as such.
option:source:updateUrl[]     =

; This is the frequency that the update pages are parsed in days. There
; is no guaretee that it will be parsed exactly in this time periord, but it
; should be very close. (Minutes rather than hours)
option:source:updateFrequency =

; True if the site needs to be logged into before data can be retrived.
option:source:loginRequired   = false

; The maximum number of bytes that can be retrived from the site
; each day
option:source:limitBytes      = 

;the class to the site. This isn't needed and if it isn't defined
;

;the name of the page class. This is required if 'implemetation' is true
page:class    =
page:location =

[forum]
implementation                = false

option:source:indexLocation   =

option:source:updateFrequency =
option:source:loginRequired   = false
option:source:limitBytes      =

site:class    =
site:location =

page:class    =
page:location =

[scheduled]
implementation          = false
option:source:hoursDelta = 168

impl:class    = 
impl:location =
