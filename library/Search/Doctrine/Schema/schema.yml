# ##############################################################################
# This is used for indexing in Sphinx, it keeps track of which items exist
# in which index
SphinxCounter:
    columns:
        counter_id:
            type: integer
            primary: true
            notnull: true
        max_doc_id:
            type: integer
            notnull: true

# ##############################################################################
# Cookie jar simply stores a serialized (php) array of cookies
CookieJar:
    columns:
        domain:
            type: string(255)
            primary: true
        data:
            type: blob

# ##############################################################################
Log:
    columns:
        id:
            type: integer
            primary: true
            autoincrement: true
        level:
            type: integer(1)
        level_name: string(32)
        message:
            type: string
        timestamp: timestamp

# #############################################################################
Category:
    columns:
        id:
            type: integer
            primary: true
            autoincrement: true
        name:
            type: string
            notnull: false
# #############################################################################
Game:
    columns:
        #id is not auto increment, as the games release is the id.
        #So morrowind would be 3, Ob woudl be 4
        id:
            type: integer
            primary: true

        short_name:
            type: string(4)
            notblank: true
        name:
            type: string
            notblank: true
            
# #############################################################################
Modification:
    columns:
        id:
            type: integer
            primary: true
            autoincrement: true
        name:
            type: string
            notblank: true
        author:
            type: string
            notblank: true
        game_id: integer
    relations:
        Game:
            foreignAlias: Game
    indexes:
        game_id:
            fields: [game_id]

# #############################################################################
Location:
    columns:
        modification_id:
            type: integer
            primary: true

        url_suffix:
            type: string(255)
            primary: true

        description:
            type: string

        version:
            type: string

        int_version:
            type: integer

        mod_source_id: integer
        category_id: integer
    relations:
        Modification:
            foreignAlias: Locations
            onDelete: CASCADE
        ModSource:
            foreignAlias: Sources
        Category:
            foreignAlias: Locations
    indexes:
        modification_id:
            fields: [modification_id]
        category_id:
            fields: [category_id]
        #as searching involves searching for int_version == 0
        int_version:
            fields: [int_version]
            
# #############################################################################
# The prefix information for a set of mods
ModSource:
    columns:
        id:
            type: integer
            primary: true
            autoincrement: 1

        #This is the entire prefix of the url, so when combined with location
        #it can be concatenated to provide the full url
        url_prefix: string

        
        #do we index the site in our searches. Note, disabling this will
        #take ages to take effect
        search:
            type: boolean
            default: true
            notnull: true

        #do we scrape the site
        scrape:
            type: boolean
            default: false
            notnull: true

    relations:
        Modification:
            type: many
            foreignType: one
            
# #############################################################################
# These are run every x hours
# This is geared towards files, as we cannot byte limit a file (easily)
ScheduledSource:
    columns:
        #used as a identifier 
        name:
            type: string(32)
            notnull: true
            primary: true

        mod_source_id: integer

        #amount of time, in hours, that must have passed before the
        #scraper is run again
        hours_delta:
            type: integer
            default: 0

        last_run_time:
            type: integer
            default: 0

    relations:
        ModSource:
            type: one
            onDelete: CASCADE
    indexes:
        mod_source_id_idx:
            fields: [mod_source_id]

# #############################################################################
# Information for a byte limited source, that data can only be retrived from
# if it is under that limit
#
# This is geared towards sites as they are the most likley to need to be
# limited by bytes
ByteLimitedSource:
    columns:
        id:
            primary: true
            type: integer
            autoincrement: true

        mod_source_id: integer

        #this is to allow looking up sites by host name
        host:
            type: string(255)

        #this is the string for the base of the url. This should be common
        #to every item
        #for example: http://yacoby.silgrad.com
        base_url:
            type: string(255)
            notnull: true

        #this is as much as the GET string as possible that is common to every mod/thread
        #i.e. /mod.php?id=
        #TODO this is the wrong name, it should be GET prefix
        url_prefix:
            type: string
            notnull: true

        #The limit in bytes per day that can be used
        #by the parser. This doesn't include headers
        byte_limit:
            type: integer
            default: 0

        #The number of bytes currently used
        bytes_used:
            type: integer
            default: 0
            notnull: true

        #the time the bytes were last updated
        #as it doesn't reset the bytes used at midnight
        #but rather the bytes used are reduced per at a set amount each second
        bytes_last_updated:
            type: integer
            default: 0

        next_update:
            type: integer
            default: 0
            notnull: true

        #quick way to disable parsing of a site
        enabled:
            type: boolean
            default: true
            notnull: true

    relations:
        ModSource:
            type: one
            onDelete: CASCADE
    indexes:
        #TODO CHECK THIS. MAY ACTUALLY WANT MORE INDEXES
        base_url:
            fields: [base_url]
        mod_source_id:
            fields: [mod_source_id]

            
# #############################################################################
Page:
    columns:
        id:
            type: integer
            primary: true
            autoincrement: true
            
        byte_limited_source_id:
            type: integer
        
        #this is the whole url path, excluding the value of baseUrl from the
        #related site. NOTE: By iteslf, this is not primary
        url_suffix:
            type: string(255)
            notnull: true

        last_visited:
            type: integer
            notnull: true
            default: 0

        revisit: integer
    indexes:
        url_suffix:
            fields: [url_suffix]
        ensure_unique:
            fields: [byte_limited_source_id, url_suffix]
            unique: true
    relations:
        ByteLimitedSource:
            onDelete: CASCADE
# ##############################################################################
SearchHistory:
    columns:
        id:
            type: integer
            autoincrement: true
        #this is so that one persons searches don't take over the entire recent
        #search history. You are basically allowed at maximum on one search
        #in the history
        ip:
            type: string(127)
            primary: true
        search_time: integer
        game_id: integer
        general: string
        name: string
        author: string
        description: string
    relations:
        Game:
            type: many
            foreignType: one
    indexes:
        id:
            fields: [id]

# #############################################################################
HistoryBanned:
    columns:
        ip:
            type: string(127)
            primary: true
        banned_time: integer
    relations:
        SearchHistory:
            type: one
            foreign: ip
            local: ip
# #############################################################################
